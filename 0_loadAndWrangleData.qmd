---
title: "NCCR MMS"
author: "Duc-Quang Nguyen "
date: last-modified
editor: visual
execute: 
  cache: true
highlight-style: pygments
format:
  html: 
    code-fold: true
    echo: TRUE
    warning: FALSE
    message: FALSE
    html-math-method: katex
    toc: true
    toc_depth: 3
    toc_float: true
    theme: simplex
---

```{r}
#| label: setup
#| include: false
  
library(here)
library(tidyverse)
library(magrittr)
library(stringr)
library(knitr)
library(dqnTheme)
library(hrbrthemes)
library(skimr)
library(systemfonts)
library(marquee)
library(ggforce)

Sys.setlocale("LC_TIME", "fr_FR.UTF-8")
options(OutDec = ",")
dqnTheme::update_geom_font_defaults()
options(scipen=999)
options(dplyr.summarise.inform = FALSE)

library(paletteer)
library(colorspace)
library(stevethemes)


### Interactive
library(patchwork)
library(ggtext)
library("waffle")
library(ggforce)
library(directlabels)
library(geomtextpath)

```

## 1a. Load and merge data files

```{r}
#| label: load and merge data files
#| include: false
#| 
data_file_path <- list.files(
  here("Data"), 
  pattern = ".csv", 
  full.names = T)

# read csv files
data_read <- data_file_path %>% 
  map_df(function(ff) {
    rr <- read_delim(ff, delim  = ";")
    year <- colnames(rr)[ncol(rr)] %>% 
      str_extract( "\\d+") %>% as.numeric()
    
    codes <- colnames(rr)[-ncol(rr)] %>% str_sub_all(4) %>% 
      unlist()
    
    colnames(rr) <- c(codes, "weight")
    rr %>% 
      mutate(year = year)
  }) 

  
data_read %<>% 
  select(
    A1, A6, B1, B9, D1, E38, year, weight, everything()
  ) %>% 
  write_csv(here("Output", "data", "merged_data_files.csv"))

```

## 1b. Enrich & wrangle

```{r}
#| label: join code txt to data

c2t_A1 <- read_csv(here("Data", "code2txt", "NCCR MMS Codes A1.csv"))
c2t_B1 <- read_csv(here("Data", "code2txt", "NCCR MMS Codes B1.csv"))
c2t_D1 <- read_csv(here("Data", "code2txt", "NCCR MMS Codes D1.csv"))
c2t_E38 <- read_csv(here("Data", "code2txt", "NCCR MMS Codes E38.csv"))


data_all <- data_read %>% 
  left_join(c2t_A1) %>% 
  left_join(c2t_B1) %>% 
  left_join(c2t_D1) %>% 
  left_join(c2t_E38)


data_all %>% filter(is.na(pays)) %>% .$B1 %>% unique() %>% sort()

data_all %>% 
  group_by(year, groupe_edu) %>% 
  summarise(
    tot = sum(weight, na.rm = T)
  ) %>% 
  ungroup() %>% 
  group_by(year) %>% 
  mutate(
    toty = sum(tot)
  ) %>% 
  ungroup %>% 
  mutate(
    share = tot/toty
  )
  
# https://projects.susielu.com/viz-palette?colors=%5B%22#66b8d4%22,%22%23f7d777%22,%22%23d1ab75%22,%22%23d97053%22,%22%238fd176%22,%22%23198f58%22,%22%236a7aaa%22,%22%230050b5%22,%22%236d5288%22,%22%23d17393%22,%22%23eca53a%22,%22%2354aa9f%22,%22%23b1b1b1%22%5D&backgroundColor=%22white%22&fontColor=%22black%22&mode=%22normal%22
pays2col <- tibble(
  pays = c("France", "Allemagne", "Espagne", "Autriche", "Italie", "Portugal",
    "Autre UE/AELE",
    "Autre Europe",
    "Autre OCDE",
    "Asie",
    "Amerique latine",
    "Afrique",
    "Autres pays"),

  color = c("#66b8d4","#f7d777","#d1ab75","#d97053",
"#8fd176","#198f58","#6a7aaa","#0050b5",
"#6d5288","#d17393","#eca53a","#855541",
"#b1b1b1")
)


# summary_tb %>%
#   select(-weight_sum) %>%
#   mutate(share = round(share, 1)) %>% 
#   mutate(share_w = round(share_w, 1)) %>% 
#   select(-tot_weight) %>% 
#   rename( N_year = toty, perc = share, perc_weighted = share_w) %>% 
#   write_csv("~/Desktop/summaryQ_NCCR_MMS.csv")


```

## VIZ

### Font embedding for svg

```{r}
#| label: font embedding for svg


library(showtext)

# Load the font from the system
font_add("Roboto Condensed", 
         regular = "/Library/Fonts/RobotoCondensed-Regular.ttf",
         bold = "/Library/Fonts/RobotoCondensed-Bold.ttf")

font_add(font_rc_light, regular = "/Library/Fonts/RobotoCondensed-Light.ttf")
font_add(font_ps,  
         regular =  "/Users/duc-q.nguyen/Library/Fonts/IBMPlexSans-Regular.ttf",
         bold =  "/Users/duc-q.nguyen/Library/Fonts/IBMPlexSans-Bold.ttf")


font_add("Merriweather", 
         regular = systemfonts::match_font("Merriweather"),
         bold = "/Users/duc-q.nguyen/Library/Fonts/Merriweather-Bold.ttf"
         )

font_add("Ratio", regular = systemfonts::match_font("Ratio")$path)
font_add("Ratio-Medium", regular = systemfonts::match_font("Ratio-Medium")$path)


showtext_auto()

# #systemfonts::match_font(font_rc)
# 
# # Add the font
# font_add(font_rc, regular = systemfonts::match_font(font_rc)$path)
# 
# 
# font_add(font_ps, regular = systemfonts::match_font(font_ps)$path)
# 
# # Automatically use showtext for rendering
# 
# showtext_auto()
```

### Education history and current situation

```{r}
#| label: La migration est de plus en plus hautement qualifiée

edu_main <- data_all %>% 
  group_by(year, groupe_edu) %>% 
  summarise(
    n = n(),
    weight_sum = sum(weight)
  ) %>% 
  ungroup() %>% 
  group_by(year) %>% 
  mutate(
    toty = sum(n),
    tot_weight = sum(weight_sum)
  ) %>% 
  ungroup %>% 
  mutate(
    share_w = (weight_sum /tot_weight) * 100
  ) 

edu_genre <- data_all %>% 
  group_by(year, groupe_edu, sexe) %>% 
  summarise(
    n = n(),
    weight_sum = sum(weight)
  ) %>% 
  ungroup() %>% 
  group_by(year, sexe) %>% 
  mutate(
    toty = sum(n),
    tot_weight = sum(weight_sum)
  ) %>% 
  ungroup %>% 
  mutate(
    share_w = (weight_sum /tot_weight) * 100
  ) 

edu3_pays <- data_all %>% 
  group_by(year, groupe_edu, pays) %>% 
  summarise(
    n = n(),
    weight_sum = sum(weight)
  ) %>% 
  ungroup() %>% 
  group_by(year, pays) %>% 
  mutate(
    toty = sum(n),
    tot_weight = sum(weight_sum)
  ) %>% 
  ungroup %>% 
  mutate(
    share_w = (weight_sum /tot_weight) * 100
  ) %>% 
  filter(groupe_edu == "Tertiaire")

# du3_pays %>% filter(year == 2022) %>% arrange(desc(share_w))

rc_base_size <- 12
rc_plot_title_size <- 13
rc_subtitle_size <- 11
rc_plot_title_color <- "#665c70"
rc_plot_subtitle_color <- "#403d43"


rc_txtbox_plot.title <- element_textbox_simple(
  color = rc_plot_title_color, 
  lineheight = 1.3,
  padding = margin(0, 1, 2, 0), 
  margin = margin(0, 0, 3, 0)
  )

rc_txtbox_plot.subtitle <- element_textbox_simple(
  color = rc_plot_subtitle_color ,
  lineheight = 1.2,
  margin = margin(0, 0, 5, 0)
)          

rc_axis_tick_txt_color <- "#b3afb6"
          
##### PLOT ####

edu_chart1 <- edu_main %>% 
  ggplot(aes(x = year, y = share_w, group = groupe_edu)) +
  geom_area(aes(fill = groupe_edu), alpha = 0.9) + 
  theme_ipsum_rc(grid="XY", axis="xy", 
                 grid_col = "black",
                 base_size = rc_base_size,
                 plot_title_size = rc_plot_title_size,
                 subtitle_size = rc_subtitle_size,
                 plot_margin = margin(10, 5, 10, 0)
  ) + 
  theme(
    legend.position = "none",
    #plot.title.position = "plot",
    plot.title = rc_txtbox_plot.title,
    plot.subtitle = rc_txtbox_plot.subtitle,    
    axis.text.x = element_text(color = rc_axis_tick_txt_color),
    axis.text.y = element_text(color = rc_axis_tick_txt_color)  
  ) +
  # remove any scale expansion
  scale_x_continuous(expand = c(0,0), name = "", breaks = seq(2016, 2022, 2)) +
  # have y scale not start at 0, add unit % 
  scale_y_continuous(expand = c(0,0), name = "", 
                     labels = function(x) paste0(x, "%"))+
  scale_color_ipsum() +
  scale_fill_ipsum() +
  labs(
    title="Part des trois niveaux de formation",
    subtitle="Niveau de formation atteint le plus élevé")

annot_df <- tibble(
  year = rep(2019, 3),
  share_w = c(27, 72, 93),
  txt = c("Tertiaire", "Secondaire II", "Secondaire I")
)

edu_chart1_a <- flush_ticks(edu_chart1)  +
  geom_richtext(data = annot_df, aes(x = year, y = share_w, label = txt, group = 1),
                fill = NA, label.color = NA,# remove background and outline,
                color = "white", size = 5,
                fontface = "bold",
                hjust = 0.5, family = font_rc
  )


edu_chart1_a 

# edu_chart1_a + 
#   facet_zoom(y = group_edu == "Tertiaire", split = T)

# edu_chart1_a +
#   facet_zoom(ylim = c(50, 60),
#              split = T,
#              zoom.size=1,
#              show.area = TRUE,
#              horizontal = TRUE)


edu_all_genre <- bind_rows(
  edu_main %>% 
    select(year, groupe_edu, share_w, n) %>% 
    mutate(type = "all"),
  edu_genre %>% 
    select(year, sexe, groupe_edu, share_w, n) %>% 
    rename(type = sexe)
) %>%  
  filter(groupe_edu == "Tertiaire") %>% 
  mutate(
    al = ifelse(type == "all", 0.7, 1)
  )

edu_genre_rib_df <- edu_all_genre %>% 
  filter(type %in% c("male", "female") & 
           groupe_edu == "Tertiaire") %>% 
  select(year, share_w, type) %>% 
  pivot_wider(names_from = type, values_from = share_w)

edu_chart2 <- edu_all_genre %>% 
  mutate(
    type = case_when(
      type == "all" ~ "TOTAL",
      type == "male" ~ "Hommes",
      type == "female" ~ "Femmes",
      T ~ type
    )
  ) %>% 
  ggplot(aes(x= year)) +
  geom_ribbon(
    data = edu_genre_rib_df,
    aes(ymin = male, ymax = female, group = 1),
    fill = "#968aa8", alpha = 0.2) +
  geom_point(aes(x = year, y = share_w, group = type,
                 color = type, size = n), 
             alpha = 0.6) +
  geom_line(aes(x = year, y = share_w, group = type,
                color = type, alpha = al), 
            size = 1,
            lineend="round", show.legend = F) +
  theme_ipsum_rc(axis="xy", grid = "Y",
                 base_size = rc_base_size,
                 plot_title_size = rc_plot_title_size,
                 subtitle_size = rc_subtitle_size,
                 plot_margin = margin(10, 5, 10, 0),
  ) + 
  theme(
    legend.position = c(0.95, 0.1),
    #plot.title.position = "plot",
    plot.title = rc_txtbox_plot.title,
    plot.subtitle = rc_txtbox_plot.subtitle,
    legend.text = element_text(size = 8, color = "darkgrey"), # Reduce legend text size
    legend.title = element_text(size = 10, color = "darkgrey", face = "bold", 
                                hjust =0.5), # Reduce legend title size
    legend.key.size = unit(0.8, "lines"), # Reduce legend key size
    axis.text.x = element_text(color = rc_axis_tick_txt_color),
    axis.text.y = element_text(color = rc_axis_tick_txt_color)  
  ) +
  scale_size(range = c(0.1, 3)) +
  scale_alpha(range = c(0.5, 1), ) +
  scale_x_continuous(
    breaks =seq(2016, 2024, 2),
    # limits = c(2016,2024),
    expand = c(0.01,0), name = "") +
  # have y scale not start at 0, add unit % 
  scale_y_continuous(expand = c(0.015,0.015), name = "", 
                     labels = function(x) paste0(x, "%")) +
  scale_colour_manual(
    values=c("#7725eb", "#469b88", "#262626")) +
  # To hide the alpha legend as well:
  guides(color = "none", alpha = "none") +
  geom_text(data=. %>% 
              arrange(desc(year)) %>% 
              group_by(type) %>% 
              slice(1), 
            aes(label=type, y = share_w,
                colour = type, alpha = al), 
            family = font_rc,
            fontface = "bold",
            position=position_nudge(0.1), hjust=0, 
            show.legend=FALSE, size = 4) +
  coord_cartesian(xlim = c(2016, 2023.4)) 

edu_chart2_a <- edu_chart2 +
  labs(
    title = "Différence selon le genre",
    subtitle = "Part avec formation tertiaire")

edu_chart2_a
#edu_chart1_a / edu_chart2_a

share_tot_3 <- edu_all_genre %>% 
  filter(year == max(year) & type == "all") %>% 
  .$share_w


edu3_pays_df <- edu3_pays %>%
  select(year, pays, groupe_edu, share_w, n) %>%
  rename(type = pays) %>% 
  filter(year == 2022) %>% 
  arrange(desc(share_w)) %>% 
  select(type, share_w, n)

pc_shift_txt <- 0
edu3_pays_df_sub <- edu3_pays_df %>% 
  filter(
    type %in% c("France", "Autre OCDE", "Asie", "Autre UE/AELE", 
                "Autre Europe",  "Amerique latine", "Afrique", "Portugal")
  ) %>% 
  left_join(
    pays2col,
    by = c("type" = "pays")
  ) %>% 
  mutate(
    type = fct_reorder(type, share_w, .desc = T)
  ) %>% 
  arrange(desc(share_w)) %>% 
  mutate(
    y = share_w,
    angle = ifelse(share_w > share_tot_3,
                   90, -90)
  )

nudge_y_txt <- ifelse(
 edu3_pays_df_sub$share_w > share_tot_3, 1, -1
)
nudge_x_txt <- ifelse(
  edu3_pays_df_sub$share_w > share_tot_3, -0.2, +0.2
)

arrow_txt <- 
  tibble(
    x1 = 0.5,
    x2 = 1,
    y1 = share_tot_3 -4,
    y2 = share_tot_3
  )



edu_chart3 <- edu3_pays_df_sub %>% 
  ggplot(aes(x=type, y=share_w)) +
  geom_point(aes(color = color, size = n)) + 
  geom_segment(
    aes(x=type, xend=type, y=share_tot_3, yend=share_w,
        color = color, size = log1p(n), alpha = 0.4), show.legend = F) +
  theme_ipsum_rc(grid="Y", axis="y", 
                 base_size = rc_base_size,
                 plot_title_size = rc_plot_title_size,
                 subtitle_size = rc_subtitle_size,
                 plot_margin = margin(10, 5, 10, 0)
  ) + 
  theme(
    legend.position = c(0.1, 0.1),
    plot.title = rc_txtbox_plot.title,
    plot.subtitle = rc_txtbox_plot.subtitle,
    legend.text = element_text(size = 8, color = "darkgrey"), # Reduce legend text size
    legend.title = element_text(
      size = 10, color = "darkgrey", 
      face = "bold", hjust =0.5), # Reduce legend title size
      legend.key.size = unit(0.8, "lines"), # Reduce legend key size
    axis.text.x = element_text(color = rc_axis_tick_txt_color),
    axis.text.y = element_text(color = rc_axis_tick_txt_color)  
  ) +
  geom_hline(yintercept = share_tot_3,
             linewidth = 1.5, color = "#262626") +
  
  scale_x_discrete(name = "", labels = NULL) +
  scale_y_continuous(name = "", 
                     labels = function(x) paste0(x, "%")) +
  geom_richtext(
    aes(label = type, x = type, y = y,
        angle = angle,
        color = color),
    fill = NA, label.color = NA,# remove background and outline,
    size = 3.8,
    hjust = 1, family = font_rc,
    nudge_y = nudge_y_txt,
    nudge_x = nudge_x_txt
  ) +
  scale_color_identity() +
  geom_curve(
    data = arrow_txt, 
    aes(x = x1, y = y1, xend = x2, yend = y2),
    # arrow = arrow(length = unit(0.08, "inch")), size = 0.5,
    color = "#8c8c8c", curvature = -0.3, size = .3) +
  annotate(geom = "text", x = 0.5, y = share_tot_3-5, 
           family = font_rc,
           color = "#8c8c8c", size = 4,
           hjust = 0,
           label = "Part du total avec une formation tertaire en 2022") +
  labs(
    title = "Différences par pays d’origine",
    subtitle = "Les plus et les moins qualifiés, % avec formation tertiaire en 2022"
  ) + 
  guides(size = guide_legend(override.aes = list(color = "darkgrey"))) 
  
edu_chart3

#(edu_chart1_a + edu_chart2_a) / edu_chart3

patchwork <- (edu_chart1_a + edu_chart2_a) / edu_chart3
# patchwork
# 
# (edu_chart1_a + edu_chart2_a) / edu_chart3


svglite::svglite(
  filename = here("Output", "charts", "education.svg"),
  height = 12,
  width = 9,
  fix_text_size = T,
  bg = "#F7F7F7"
  )

patchwork + 
  plot_annotation(
    title="La migration est de plus en plus hautement qualifiée",
    theme = theme(
      plot.title = element_textbox_simple(
        size = 23, 
        hjust = 0.5,
        colour = "#3f2d54",
        face = "bold",
        family = "Merriweather",
        lineheight = 1.3,
        padding = margin(15, 5, 10, 5), 
        margin = margin(10, 3, 20, 3)
      )))
  

dev.off()



```

### La migration concerne de plus en plus des personnes en couple

Concernant la variable a6 (année d'arrivée), la codification de celle-ci dépend de l'année de l'enquête dans le sens où dans la première enquête nous sommes parti du plus récent (1 = 2016) au plus ancien (11 = 2006). Tous les deux ans, on a dû adapter les modalités et l'institut de sondage a choisi de continuer de la même manière (du plus récent au plus ancien) mais en commençant successivement en 2018, 2020, 2022.

Voici les formats que j'utilise pour les analyses

value arr22a 1-3 = "2020-2022" 4-8 ="2015-2019" 9-13 ="2010-2014" 14-17 ="2006-2009"; value arr20a 1 = "2020-2022" 2-6 ="2015-2019" 7-11 ="2010-2014" 12-15 ="2006-2009"; value arr18a 1-4 ="2015-2018" 5-9 ="2010-2014" 10-13 ="2006-2009"; value arr16a 1-2 ="2015-2016" 3-7 ="2010-2014" 8-11 ="2006-2009";

```{r}
#| label: La migration concerne de plus en plus des personnes en couple

# 2022 to 
#data_all %>% count(A6)


# odd number of migration years, last interval is 3 years!!! 
migy2gr <- tibble(
  migy = 2006:2022,
  migg = c(rep(seq(2006, 2020, 2), each = 2), 2020)
) %>% 
  mutate(
    migg = ifelse(migg >= 2020, "2020\n2022", str_c(migg,"\n", migg+1)) %>% as.factor()
  )

migm <- data_all %>% 
  mutate(
    migy = year - (ifelse(A6 < 0, NA, A6) -1),
    mar = case_when(
      B9 == 1 ~ T,
      B9 == 2 ~ F,
      T ~ NA
    )
  ) %>% 
  left_join(
    migy2gr
  ) %>% 
  group_by(migg, mar, B9) %>% 
  reframe(
    n = n(),
    tot_weight = sum(weight, na.rm = T),
  ) %>% 
  filter(!is.na(migg)) %>% 
  filter(!is.na(mar))


rc_txtbox_plot.title <- element_textbox_simple(
  color = rc_plot_title_color, 
  lineheight = 1.3,
  padding = margin(0, 1, 2, 0), 
  margin = margin(0, 0, 10, 0)
  )

rc_txtbox_plot.subtitle <- element_textbox_simple(
  color = rc_plot_subtitle_color,
  lineheight = 1.2,
  margin = margin(10, 0, 10, 0)
)        
rc_axis_tick_txt_color <- "#99949e"



migm_df <- migm %>% 
  group_by(migg) %>% 
  reframe(
    tot = sum(n),
    mar_share = (tot_weight[which(mar)] / (sum(tot_weight, na.rm = T))) * 100
  ) %>% 
  mutate(
    non_mar_share = 100 - mar_share
  ) %>% 
  pivot_longer(
    mar_share:non_mar_share, names_to = "group"
  ) %>% 
  mutate(
    group = factor(ifelse(group == "mar_share", "Marié", "Non-marié")) %>% 
      fct_reorder(value)
  ) %>% 
  rename(n = tot)

mig_chart1 <- migm_df %>% 
  ggplot(aes(x = migg, y = value, group = group)) +
  geom_area(aes(fill = group), alpha = 0.95, show.legend = FALSE) + 
  geom_point(data = migm_df %>% filter(group == "Marié"),
            aes(x = migg, y = value, group = group, size = n),
            color = "white"
            ) +
  geom_line(data = migm_df %>% filter(group == "Marié"),
             aes(x = migg, y = value, group = group),
             color = "white", size = 1
  ) +
  theme_ipsum_rc(grid="XY", axis="xy", 
                 grid_col = "black",
                 base_size = rc_base_size,
                 plot_title_size = rc_plot_title_size,
                 subtitle_size = rc_subtitle_size,
                 plot_margin = margin(10, 5, 10, 0)
  ) + 
  theme(
    legend.position = c(0.98, 0.22),
    legend.title = element_text(
          color = "lightgrey", 
          face = "bold", hjust = 0.5, size = 10),
    legend.text = element_text(color = "lightgrey", size = 8),
    legend.justification = c(1, 0.8),
    legend.key.size = unit(0.8, "lines"), # Reduce legend key size
    #plot.title.position = "plot",
    plot.title = rc_txtbox_plot.title,
    plot.subtitle = rc_txtbox_plot.subtitle,
    axis.text.x = element_text(color = rc_axis_tick_txt_color),
    axis.text.y = element_text(color = rc_axis_tick_txt_color)   
  ) +
  guides(size = guide_legend(override.aes = list(color = "grey")))  +
  # remove any scale expansion
  scale_x_discrete(expand = c(0,0), name = "") +
  # have y scale not start at 0, add unit % 
  scale_y_continuous(expand = c(0,0), name = "", 
                     breaks = seq(25, 100, 25),
                     labels = function(x) paste0(x, "%"))+
  scale_color_ipsum() +
  scale_fill_manual(values = c("#c9d175", "#758bd1")) +
  labs(
    title="17 points de plus ",
    subtitle="Proportion de personnes en couple lors de leur migration")


annot_df <- tibble(
  year = rep(4.5, 2),
  value = c(53, 85),
  txt = c("En couple", "Seul")
)

mig_chart1_a <- mig_chart1  +
  geom_richtext(
    data = annot_df, 
    aes(x = year, y = value, label = txt, group = 1),
    fill = NA, label.color = NA,# remove background and outline,
    color = "white", size = 9, fontface = "bold",
    hjust = 0.5, family = font_rc
  )
mig_chart1_a




## Focus
mign <- data_all %>% 
  mutate(
    mar = case_when(
      B9 == 1 ~ T,
      B9 == 2 ~ F,
      T ~ NA
    )
  ) %>% 
  group_by(pays, mar) %>% 
  reframe(
    n = n(),
    tot_weight = sum(weight, na.rm = T),
  ) %>% 
  filter(!is.na(mar))


mign_df <- mign %>% 
  group_by(pays) %>% 
  reframe(
    tot = sum(n),
    mar_share = (tot_weight[which(mar)] / (sum(tot_weight, na.rm = T))) * 100
  ) %>% 
  mutate(
    non_mar_share = 100 - mar_share
  ) %>% 
  filter(!is.na(pays)) %>% 
  arrange(desc(non_mar_share)) %>% 
  mutate(pays = fct_reorder(pays, mar_share)) %>% 
  pivot_longer(mar_share:non_mar_share, names_to = "type") 



# https://dqn.website/post/interactive-mekko-charts-in-r/

col_couple <- lighten("#758bd1", amount = 0.2) %>% desaturate(0.1) #colorspace::adjust_transparency("#3f2d54", alpha = 0.4)
col_seul <- darken("#c9d175", 0.1) #"#c9d175" 

mign_df %<>% 
  group_by(type) %>% 
  arrange(desc(pays)) %>%
  mutate(
    ymax = cumsum(tot) / sum(tot), 
    ymin = (ymax - (tot/sum(tot)))
  ) %>% ungroup() %>% 
  group_by(pays) %>% 
  arrange(type) %>%
  mutate(xmax = cumsum(value), xmin = xmax - value) %>%
  ungroup() %>% 
  arrange(pays)

mign_sub <- mign_df %>% 
  filter(pays != "Autres pays") %>% 
  left_join(pays2col)

mig_chart2 <- ggplot(mign_sub) + 
  geom_rect(aes(ymin = ymin, 
                ymax = ymax, xmin = xmin, 
                xmax = xmax, fill = type ), 
            colour = "white", size = 0.9, alpha = 0.95) +
  theme_ipsum_rc(
    grid="X", axis="x", 
    grid_col = "black",
    base_size = rc_base_size - 2, # make it smaller
    plot_title_size = rc_plot_title_size,
    subtitle_size = rc_subtitle_size,
    plot_margin = margin(10, 5, 10, 0)
  ) + 
  theme(
    legend.position = "none",
    plot.title = rc_txtbox_plot.title,
    plot.subtitle = rc_txtbox_plot.subtitle,
    axis.text.x = element_text(color = rc_axis_tick_txt_color),
    axis.text.y = element_text(color = rc_axis_tick_txt_color)   
  ) + 
  #scale_fill_identity() +
  scale_fill_manual(values = c(col_couple, col_seul)) +
  geom_vline(xintercept = 50, linetype = "dashed",
             linewidth = 0.5, color = "lightgrey") +
  
  scale_x_continuous(name = "", expand = c(0,0), position = "top",
                     labels = function(x) paste0(x, "%")) +
  scale_y_continuous(name = "",  labels = NULL, expand = c(0,0))


# job labels tibble
mign_labels <- mign_sub %>% 
  filter(type == "mar_share") %>%
  mutate(y = ymax - 0.01, yRange = (ymax - ymin)* 100) %>%
  select(pays, xmin, y, yRange) %>% 
  ungroup()

value_labels <- mign_sub %>% 
  select(pays, type, xmin, xmax, ymax, value) %>%
  mutate(
    x = ifelse(type == "mar_share", xmax, xmin),
    y = ymax - 0.01,
    label = paste0(round(value, 1), "%"),
    hjust = ifelse(type == "mar_share", 1.05, -0.05)
  ) 
  

mig_chart2_a <- mig_chart2 + 
  geom_richtext(
    data = mign_labels,
    aes(x = xmin + 0.01, y = y, 
        label = as.character(pays), size = yRange),
    fill = NA, label.color = NA,# remove background and outline,
    size = 4,
    hjust = 0, vjust = 1, colour = "white",
    family = font_rc
  ) +
  geom_richtext(
    data = value_labels,
    aes(x = x + 0.01, y = y, label = label, hjust = hjust),
    fill = NA, label.color = NA,# remove background and outline,
    vjust = 1, size = 3, alpha = 0.9, colour = "white",
    family = font_rc_light
  ) +
  annotate(
    geom = "richtext",
    x=90,y = 0.5, angle = -90, label = "Seul",
    fill = NA, label.color = NA,# remove background and outline,
    size = 10,
    family = font_rc, fontface = "bold", 
    alpha = 0.6,
    color = "white"
  ) +
  labs(
    title = str_c("Les personnes des pays voisins migrent plus souvent <span style = 'color:", 
    col_seul, ";'>seuls</span>"),
    subtitle = "% personnes en couple ou seules lors de leur migration, par pays"
  )
  
# 3
# 1.        Your spouse/partner already lived in Switzerland when you met.
# 2.        You moved together.
# 3.        Your spouse/partner moved before you.
# 4.        Your spouse/partner moved after you.
# 5.        Your spouse/partner has not yet moved to Switzerland.

## geom area with raw data 

# miggc_df <- data_all %>% 
#   filter(B10 %in% 1:5) %>% 
#   mutate(
#     mc = case_when(
#       B10 == 1 ~ "Partenaire déjà en Suisse",
#       B10 == 2 ~ "Migration ensemble",
#       B10 %in% c(3,4) ~ "Partenaire a migré après",
#       B10 == 5 ~ "Partenaire n'a pas encore migré",
#       T ~ ""
#     )
#   ) %>% 
#   mutate(
#     migy = year - (ifelse(A6 < 0, NA, A6) -1)
#   ) %>% 
#   left_join(
#     migy2gr
#   ) %>% 
#   select(
#     migg, mc, B10, weight
#   )
# 
# miggc_df %<>% 
#   group_by(migg, mc) %>% 
#    reframe(
#     n = n(),
#     weight = sum(weight, na.rm = T),
#   ) 
# 
# tot_weight <- miggc_df %>% 
#   group_by(migg) %>% 
#   summarise(
#     n_tot = sum(n),
#     tot_weight = sum(weight)
#   ) %>% 
#   select(-n_tot)
# 
# miggcp_df <- left_join(
#   miggc_df,
#   tot_weight
# ) %>% 
#   mutate(
#     share = (weight / tot_weight) * 100
#   ) 
# 
# 
# miggcp_df %>% 
#   ggplot(aes(x = migg, y = share, group = mc, fill = mc)) +
#   geom_area()


migcww <- tibble(
  share = round(c(44,	32.0,	15.7,	7.8)),
  labels = c("Partenaire déjà en Suisse",
             "Migration ensemble",
             "Partenaire a migré après",
             "Partenaire n'a pas encore migré"
             )
) 
  
  
migcw_chart_a <- migcww %>% 
  ggplot(
    aes(fill = labels, values = share)
  ) +
  geom_waffle(
    n_rows = 10,
    size = 0.9, 
    colour = "white",
    flip = TRUE
  ) +
  theme_ipsum_rc(
    grid=FALSE, axis=F, 
   # grid_col = "black",
    base_size = rc_base_size,
    plot_title_size = rc_plot_title_size,
    subtitle_size = rc_subtitle_size,
    plot_margin = margin(15, 5, 10, 0)
  ) + 
  theme(
    legend.position = "top",
    axis.text.y = element_blank(),  # Hide y-axis text
    axis.ticks.y = element_blank() , # Hide y-axis ticks
    axis.text.x = element_blank(),  # Hide y-axis text
    axis.ticks.x = element_blank() , # Hide y-axis ticks
    plot.title = rc_txtbox_plot.title,
    plot.subtitle = rc_txtbox_plot.subtitle
  ) +
    scale_fill_manual(values = c("#75b8d1", "#d18975", "#758bd1",  "#d1ab75"))  +
  labs(
    title = str_c("Migration en couple: un déplacement rarement conjoint (1 fois sur 3)"),
    subtitle = "Parmi les personnes qui étaient en couple au moment de la migration"
  ) + guides(fill = guide_legend(nrow = 2, title =""))
  
  
  
  







### no longer used !! 

migcw <- tibble(
  share = c(44.6,	32.0,	15.7,	7.8),
  labels = c("Partenaire déjà en Suisse",
             "Migration ensemble",
             "Partenaire a migré après",
             "Partenaire n’a pas encore migré"
             )
) %>% 
  mutate(
    labels = factor(labels) %>% fct_reorder(share) %>% 
      fct_relevel("Migration ensemble")
  ) %>% 
  arrange(labels)

migcw_chart <- migcw %>% 
  ggplot(aes(x = 1, y = share, fill = rev(labels))) +
  geom_bar(stat = "identity") +  # Stacked bar chart
#  coord_flip() +                 # Make bars horizontal
 theme_ipsum_rc(
    grid="", axis="", 
    grid_col = "black",
    base_size = rc_base_size,
    plot_title_size = rc_plot_title_size,
    subtitle_size = rc_subtitle_size,
    plot_margin = margin(15, 5, 10, 0)
  ) + 
  theme(
    legend.position = "none",
    axis.text.y = element_blank(),  # Hide y-axis text
    axis.ticks.y = element_blank() , # Hide y-axis ticks
    plot.title = rc_txtbox_plot.title,
    plot.subtitle = rc_txtbox_plot.subtitle,
    axis.text.x = element_text(color = rc_axis_tick_txt_color)
  ) + 
  #scale_fill_ipsum()+
  scale_fill_manual(values = c("#75b8d1", "#d18975", "#d1ab75", "#758bd1")) +
  scale_x_continuous(name = "", expand = c(0,0), 
                     labels = NULL, ) +
  scale_y_continuous(name = "",  labels = NULL, 
                     expand = c(0,0)) 

migcw %<>% 
  arrange(labels) %>% 
  mutate(
    x = cumsum(share)
  ) %>% 
  arrange(labels) %>% 
  mutate(
    txt = as.character(labels) 
  ) %>% 
  mutate(
    txt = ifelse(txt == "Migration ensemble", 
                 "**Migration ensemble**", txt) 
  )

migcw_chart_b <- migcw_chart +
  geom_richtext(data = migcw, 
    aes(x = 0.6, y=x-10, label = txt),
    fill = NA, label.color = NA,# remove background and outline,
    size = 4,
    vjust = 0,
    hjust = 0, alpha = 0.9, colour = "white",
    family = font_rc
  ) +
   geom_richtext(data = migcw, 
    aes(x = 1.2, y=x-10, label = paste0(share, "%")),
    fill = NA, label.color = NA,# remove background and outline,
    size = 4,
    vjust = 0,
    hjust = 0, alpha = 0.9, colour = "white",
    family = font_rc,
  )  +
  labs(
    title = str_c("Migration en couple: un déplacement rarement conjoint (1 fois sur 3)"),
    subtitle = "Parmi les personnes qui étaient en couple au moment de la migration"
  )


patchwork2 <- (mig_chart1_a /migcw_chart_a) +
   plot_layout(heights = c(2, 1.2)) | mig_chart2_a + plot_layout(widths = c(2, 1))

patchwork2

svglite::svglite(
  filename = here("Output", "charts", "migration_couple.svg"),
  height = 12,
  width = 9,
  fix_text_size = T,
  bg = "#F7F7F7"
  )

patchwork2 +
  plot_annotation(
    title="La migration concerne de plus en plus des personnes en couple",
    theme = theme(
      plot.title = element_textbox_simple(
        size = 23,
        hjust = 0.5,
        colour = "#758bd1",
        face = "bold",
        family = "Merriweather",
        lineheight = 1.3,
        padding = margin(15, 5, 10, 5),
        margin = margin(10, 3, 20, 3)
      )))


dev.off()


```

### Les partenaires s’intègrent plus difficilement sur le marché du travail

E38 1. Yes, fully appropriate 2. Yes, rather appropriate 3. No, not really appropriate 4. No, absolutely not appropriate -9. No answer

```{r}
#| label: Les partenaires s’intègrent plus difficilement sur le marché du travail


migy2gr2 <- tibble(
  migy = 2006:2022,
  migg = c(rep(seq(2006, 2020, 2), each = 2), 2020),
  migg4 = c(rep(seq(2006, 2018, 4), each = 4), 2018),
) %>% 
  mutate(
    migg = ifelse(migg >= 2020, "2020\n2022", str_c(migg,"\n", migg+1)) %>% as.factor(),
    migg4 = ifelse(migg4 >= 2018, "2018\n2022", str_c(migg4,"\n", migg4+4)) %>% as.factor()
  )

pimt_df <- data_all %>% 
  filter(!is.na(E38) & E38 != -9 & E38 != -7) %>% 
  select(A6, B1, E38, sexe, pays, year, weight) %>% 
  mutate(
    migy = year - (ifelse(A6 < 0, NA, A6) -1),
    comp_utilisees = ifelse(E38 <= 2, "oui", "non")
  ) %>% 
  left_join(
    migy2gr2
  ) 

pimt_tot <- pimt_df %>% 
  group_by(sexe, year) %>% 
  reframe(
    n_y = n(),
    weight_y = sum(weight, na.rm = T)
  ) %>% 
  arrange(year, sexe) 

pimt_sub <- pimt_df %>% 
  filter(comp_utilisees  == "non") %>% 
  group_by(sexe, year) %>% 
  reframe(
    weight = sum(weight, na.rm = T)
  ) %>% 
  left_join(
    pimt_tot
  ) %>% 
  arrange(year, sexe) %>% 
  mutate(
    share_non = (weight / weight_y) * 100
  ) 
  
pimt_subw <- pimt_sub %>% 
  select(year, sexe, share_non) %>% 
  pivot_wider(names_from= sexe, values_from = share_non) %>% 
  mutate(
    gap = female - male,
    x_gap = (female + male) / 2
  )
  

# gradient segment
# https://stackoverflow.com/questions/55752424/draw-a-geom-segment-line-with-a-colour-gradient-or-is-there-another-way-to-emp

pimt_chart1 <- pimt_sub %>% 
  ggplot() +
  geom_link(data = pimt_subw, 
            aes(male,
                xend = female,
                y = year, yend = year,
                color = stat(index)),
            lwd = 3, alpha = 0.9, show.legend = F) +
  geom_point(
    aes(x = share_non, y = year, fill = sexe,
        size = n_y), pch = 21) +
  scale_size_continuous(range = c(7,9), name = "n") +
  theme_ipsum_rc(
    grid="X", axis="X", 
    base_size = rc_base_size,
    plot_title_size = rc_plot_title_size,
    subtitle_size = rc_subtitle_size,
    plot_margin = margin(15, 5, 10, 0)
  ) + 
  theme(
    legend.position = c(0.27, 0.17),
    plot.title = rc_txtbox_plot.title,
    plot.subtitle = rc_txtbox_plot.subtitle,
    axis.text.y = element_text(
      margin = margin(t = 0, r = -30, b = 0, l = 0, unit = "pt"),
      face = "bold", color = rc_axis_tick_txt_color),
    legend.title = element_text(color = "darkgrey", face = "bold", hjust = 0.5, size = 10),
    legend.text = element_text(color = "darkgrey", size = 8),
    legend.justification = c(1, 0.8),
    legend.key.size = unit(0.8, "lines"), # Reduce legend key size
    axis.text.x = element_text(color = rc_axis_tick_txt_color)
  ) + 
  scale_colour_gradient(low = "#469b88", high = "#7725eb") +
  scale_fill_manual(values = c("#7725eb", "#469b88")) +
  scale_x_continuous(name = "", 
                     expand = c(0.5,0.1), 
                     position = "top",
                     #limits = c(0, max(pimt_sub$share_non)),
                     labels = function(x) paste0(x, "%")
                     ) +
  scale_y_continuous(name = "",  
                     position = "left",
                      breaks = c(2018, 2020, 2022),
                      expand = c(0.1,0.1)) +
  guides(fill = "none", size = guide_legend(
    override.aes = list(fill = "lightgrey", colour = "darkgrey"))) 


pimit_chart1_a <- pimt_chart1 +
  geom_richtext(data = pimt_sub,
                fill = NA, label.color = NA, # remove background and outline
                aes(x = share_non, y = year, 
                    family = font_rc_light,
                    label = prettyNum(share_non, digits = 3)),
                vjust = 0, nudge_y = 0.07, colour = "darkgrey"
  ) +
  geom_richtext(data = pimt_subw,
                fill = NA, label.color = NA, # remove background and outline
                aes(x = x_gap, y = year, 
                     family = font_rc,
                    label =  prettyNum(gap, digits = 2)),
                fontface = "bold",
                vjust = 0, nudge_y = 0.04, colour = "darkgrey"
  ) +
  labs(
    title = str_c(
      "Les <span style='color:#7725eb'>femmes</span> sont davantage concernées que les <span style='color:#469b88'>hommes</span> par la non utilisation de leurs compétences"),
    subtitle = "% de personnes qui considèrent ne pas utiliser leurs compétences au travail"
  )

pimit_chart1_a


pimtm_tot <- pimt_df %>% 
  group_by(migg4) %>% 
  reframe(
    n_y = n(),
    weight_y = sum(weight, na.rm = T)
  ) 

pimt_sub2 <- pimt_df %>% 
  filter(comp_utilisees == "non") %>% 
  group_by(migg4) %>% 
  reframe(
    n = n(),
    weight = sum(weight, na.rm = T)
  ) %>% 
  left_join(pimtm_tot) %>% 
  filter(!is.na(migg4)) %>% 
  mutate(
    share_non = (weight / weight_y) * 100
  ) 

pimit_chart2 <- pimt_sub2 %>% 
  ggplot(
    aes(x = migg4, y = share_non, group = 1)
  ) +
  geom_line(color = "#d1ab75", size = 1, alpha = 0.6) +
  geom_point(aes(size = n), color = darken("#d1ab75")) +
  scale_size_continuous(range = c(4,6), name = "n") +
  theme_ipsum_rc(
    grid="Y", axis="XY", 
    base_size = rc_base_size,
    plot_title_size = rc_plot_title_size,
    subtitle_size = rc_subtitle_size,
    plot_margin = margin(15, 5, 10, 0)
  ) + 
  theme(
    legend.position = c(0.93, 0.19),
    plot.title = rc_txtbox_plot.title,
    plot.subtitle = rc_txtbox_plot.subtitle,
    axis.text.y = element_text(
      margin = margin(t = 0, r = -30, b = 0, l = 0, unit = "pt"),
      color = rc_axis_tick_txt_color),
    legend.title = element_text(color = "darkgrey", face = "bold", hjust = 0.5, size = 10),
    legend.text = element_text(color = "darkgrey", size = 8),
    legend.justification = c(1, 0.8),
    legend.key.size = unit(0.8, "lines"), # Reduce legend key size
    axis.text.x = element_text(color = rc_axis_tick_txt_color)
  ) + 
  #scale_colour_gradient(low = "#469b88", high = "#7725eb") +
  #scale_fill_manual(values = c("#7725eb", "#469b88")) +
  scale_y_continuous(name = "", expand = c(0.1,0.1), 
                   labels = function(x) paste0(x, "%")) +
  scale_x_discrete(name = "",  
                      expand = c(0.1,0.1)) +
  guides(fill = "none", 
         size = guide_legend(
    override.aes = list(fill = "lightgrey", colour = "darkgrey")))  +
  labs(
    title = "La non-utilisation des compétences concerne plus les migrants récents (temps d’adaptation)",
    subtitle = "% compétences non utilisées en fonction de l’année d’arrivée"
  )

pimit_chart2


## 3. Par nationalité

pimtn_tot <- pimt_df %>% 
  filter(sexe == "female") %>% 
  group_by(pays) %>% 
  reframe(
    n_y = n(),
    weight_y = sum(weight, na.rm = T)
  ) 

pimt_sub3 <- pimt_df %>% 
  filter(sexe == "female") %>% 
  filter(comp_utilisees == "non") %>% 
  group_by(pays) %>% 
  reframe(
    weight = sum(weight, na.rm = T)
  ) %>% 
  filter(!is.na(pays)) %>% 
  left_join(pimtn_tot) %>% 
  mutate(share_non = (weight / weight_y) * 100) %>% 
  arrange(desc(share_non))

# https://r-graph-gallery.com/81-barplot-with-variable-width.html
# Calculate the future positions on the x axis of each bar (left border, central position, right border)
# data$right <- cumsum(data$number_of_obs) + 30*c(0:(nrow(data)-1))
# data$left <- data$right - data$number_of_obs 

n_mult <- 30

pimt_sub3 %<>% 
  filter(pays != "Autres pays") 

pimt_sub3 %<>% 
  mutate(
    right = cumsum(n_y) + n_mult * c(0:(nrow(pimt_sub3)-1)),
    left = right - n_y,
    middle = (left+right) / 2
  ) %>% left_join(
    pays2col
  )
  
pimt_chart3 <- pimt_sub3 %>%   
  ggplot(aes(ymin = 0)) +
    geom_rect(
      aes(xmin = left, xmax = right, ymax = share_non, 
          fill = color)) +
  scale_fill_identity() +
    theme_ipsum_rc(
    grid="Y", axis="Y", 
    base_size = rc_base_size,
    plot_title_size = rc_plot_title_size,
    subtitle_size = rc_subtitle_size,
    plot_margin = margin(15, 5, 10, 0)
  ) + 
  theme(
#    legend.position = c(0.93, 0.19),
    plot.title = rc_txtbox_plot.title,
    plot.subtitle = rc_txtbox_plot.subtitle,
    axis.text.y = element_text(
      margin = margin(t = 0, r = -30, b = 0, l = 0, unit = "pt"),
      face = "bold", color = rc_axis_tick_txt_color),
    legend.title = element_text(color = "darkgrey", face = "bold", hjust = 0.5, size = 10),
    legend.text = element_text(color = "darkgrey", size = 8),
    legend.justification = c(1, 0.8),
    legend.key.size = unit(0.8, "lines"), # Reduce legend key size
    axis.text.x = element_blank()
  ) +
   scale_y_continuous(
     name = "", expand = c(0,0), 
     position = "right",
     labels = function(x) paste0(x, "%")) +
  scale_x_continuous(name = "", expand = c(0,0))

pimt_chart3_a <- pimt_chart3 +
  geom_richtext(
    aes(x = middle, y = share_non, 
        label = pays),
    fill = NA, label.color = NA, # remove background and outline
   # fontface = "bold", 
    family = font_rc,
    size = 6,
    vjust = 0.5, angle = 90,
    hjust = 1, nudge_y = -0.7,
    colour = "white"
  ) +
  labs(
    title = "La non-utilisation des compétences au travail concerne principalement les femmes originaires de pays européens hors UE/AELE (Balkans notamment), d’Afrique, d’Amérique latine et du Portugal"
  )

  

# 4 Patchwork
 
patchwork3 <- (pimit_chart1_a |pimit_chart2) / (pimt_chart3_a) +
   plot_layout(heights = c(1, 1)) 

patchwork3

svglite::svglite(
  filename = here("Output", "charts", "emploi_situation.svg"),
  height = 12,
  width = 9,
  fix_text_size = T,
  bg = "#F7F7F7"
  )

patchwork3 +
  plot_annotation(
    title="Les partenaires s’intègrent plus difficilement sur le marché du travail",
    theme = theme(
      plot.title = element_textbox_simple(
        size = 23,
        hjust = 0.5,
        colour = "#758bd1",
        face = "bold",
        family = "Merriweather",
        lineheight = 1.3,
        padding = margin(15, 5, 10, 5),
        margin = margin(10, 3, 20, 3)
      )))


dev.off()


```
